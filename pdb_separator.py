#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Program to separate .pdb trajectory file genrated by cpptraj into multiple .pdb file
"""

import sys, signal
signal.signal(signal.SIGINT, signal.SIG_DFL)

import argparse

from mods.func_prompt_io import check_exist, check_overwrite



# =============== function =============== #
def separate_pdb(input_file, output_file):
	"""
	Function to separate .pdb file generated by cpptraj into multiple .pdb file

	Args:
		input_file (str): input file
		output_file (str): output prefix
	"""
	obj_output = None
	with open(input_file, "r") as obj_input:
		flag_read = False
		file_idx = 1
		for line_val in obj_input:
			if line_val.startswith("MODEL"):
				flag_read = True
				output_sep_file = "{0}.{1}".format(output_file, file_idx)
				obj_output = open(output_sep_file, "w")
				sys.stderr.write("INFO: Create {0} ... ".format(output_sep_file))
				sys.stderr.flush()
				file_idx += 1
				continue

			if flag_read:
				if line_val.startswith("ENDMDL"):
					obj_output.write("END\n")
					obj_output.close()
					flag_read = False
					sys.stderr.write("done.\n")
					continue

				obj_output.write(line_val)


# =============== main =============== #
if __name__ == '__main__':
	parser = argparse.ArgumentParser(description="Program to separate .pdb trajectory file genrated by cpptraj into multiple .pdb file", formatter_class=argparse.RawTextHelpFormatter)
	parser.add_argument("-i", dest="INPUT_FILE", metavar="INPUT.pdb", required=True, help="input file")
	parser.add_argument("-o", dest="OUTPUT_FILE", metavar="OUTPUT.pdb", required=True, help="output prefix")
	parser.add_argument("-O", dest="FLAG_OVERWRITE", action="store_true", default=False, help="overwrite forcibly")
	args = parser.parse_args()

	check_exist(args.INPUT_FILE, 2)

	if args.FLAG_OVERWRITE == False:
		check_overwrite(args.OUTPUT_FILE)

	separate_pdb(args.INPUT_FILE, args.OUTPUT_FILE)
